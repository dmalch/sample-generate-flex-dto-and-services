/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (SampleService.as).
 */

package com.example {

    import mx.messaging.ChannelSet;
    import mx.messaging.config.ServerConfig;
    import mx.rpc.remoting.mxml.RemoteObject;

    public class SampleServiceBase extends RemoteObject {

        private var _initRemote:Boolean = false;

        private function initRemote():void {
            destination = "sampleService";
            channelSet = new ChannelSet();
            channelSet.addChannel(ServerConfig.getChannel("amf"));
            _initRemote = true;    
        }

        public function getSampleField1(sampleDto:SampleDto):void {
            if (!_initRemote)
                initRemote();
            getOperation("getSampleField1").send(sampleDto);
        }

        public function sampleMethod1():void {
            if (!_initRemote)
                initRemote();
            getOperation("sampleMethod1").send();
        }

        public function getSampleField2(sampleDto:SampleDto):void {
            if (!_initRemote)
                initRemote();
            getOperation("getSampleField2").send(sampleDto);
        }

        public function addOperationListener(op:Function, type:String, handler:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false):void {
            if (op == this.getSampleField1) 
                this.getOperation("getSampleField1").addEventListener(type, handler, useCapture, priority, useWeakReference);
            if (op == this.sampleMethod1) 
                this.getOperation("sampleMethod1").addEventListener(type, handler, useCapture, priority, useWeakReference);
            if (op == this.getSampleField2) 
                this.getOperation("getSampleField2").addEventListener(type, handler, useCapture, priority, useWeakReference);
        }

        public function removeOperationListener(op:Function, event:String, handler:Function):void {
            if (op == this.getSampleField1) 
                this.getOperation("getSampleField1").removeEventListener(event, handler);
            if (op == this.sampleMethod1) 
                this.getOperation("sampleMethod1").removeEventListener(event, handler);
            if (op == this.getSampleField2) 
                this.getOperation("getSampleField2").removeEventListener(event, handler);
        }
    }
}